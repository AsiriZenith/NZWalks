// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using NZWalks.API.Data;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace NZWalks.API.Migrations
{
    [DbContext(typeof(NZWalksDbContext))]
    partial class NZWalksDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("NZWalks.API.Models.Domain.Difficulty", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Difficulties");

                    b.HasData(
                        new
                        {
                            Id = new Guid("dce0b3ae-f57d-4cce-9425-fde015e2c7b5"),
                            Name = "Easy"
                        },
                        new
                        {
                            Id = new Guid("9163de00-a8e3-4b2f-af26-dd536b1d59cb"),
                            Name = "Medium"
                        },
                        new
                        {
                            Id = new Guid("f8ed408d-2969-4aba-a93f-fb4cf17b19db"),
                            Name = "Hard"
                        });
                });

            modelBuilder.Entity("NZWalks.API.Models.Domain.Region", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("RegionImageUrl")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Regions");

                    b.HasData(
                        new
                        {
                            Id = new Guid("f8ed408d-2969-4aba-a93f-fb4cf17b19db"),
                            Code = "AKL",
                            Name = "Auckland",
                            RegionImageUrl = "https://images.app.goo.gl/a68tjnGNah5b9bdVA"
                        },
                        new
                        {
                            Id = new Guid("6647e810-48d2-497d-b241-dba58edcf80c"),
                            Code = "AKL",
                            Name = "Northland",
                            RegionImageUrl = "https://images.app.goo.gl/WhFEsqvb9fcf543J8"
                        },
                        new
                        {
                            Id = new Guid("36809860-36b9-426b-b6ee-16f7bab876c9"),
                            Code = "BOP",
                            Name = "Bay Of Plenty",
                            RegionImageUrl = "https://images.app.goo.gl/qGgEnHCn1fnjriic6"
                        },
                        new
                        {
                            Id = new Guid("276a7602-ceb8-4700-997a-0f9a7b14ae24"),
                            Code = "WGN",
                            Name = "Wellington",
                            RegionImageUrl = "https://images.app.goo.gl/HAk8CB4PWHJRCzkT8"
                        },
                        new
                        {
                            Id = new Guid("6ca36f10-d705-4ace-b903-8cdb01532f70"),
                            Code = "NSN",
                            Name = "Nelson",
                            RegionImageUrl = "https://images.app.goo.gl/JvLtU9r7EjnRgZ5CA"
                        },
                        new
                        {
                            Id = new Guid("ff4e4220-d272-423d-8527-5c583211ba4a"),
                            Code = "STL",
                            Name = "Southland",
                            RegionImageUrl = "https://images.app.goo.gl/ZR3tV6Spoi8YZK9Y6"
                        });
                });

            modelBuilder.Entity("NZWalks.API.Models.Domain.Walk", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid>("DifficultyId")
                        .HasColumnType("uuid");

                    b.Property<double>("LengthInKm")
                        .HasColumnType("double precision");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid>("RegionId")
                        .HasColumnType("uuid");

                    b.Property<string>("WalkImageUrl")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("DifficultyId");

                    b.HasIndex("RegionId");

                    b.ToTable("Walks");
                });

            modelBuilder.Entity("NZWalks.API.Models.Domain.Walk", b =>
                {
                    b.HasOne("NZWalks.API.Models.Domain.Difficulty", "Difficulty")
                        .WithMany()
                        .HasForeignKey("DifficultyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NZWalks.API.Models.Domain.Region", "Region")
                        .WithMany()
                        .HasForeignKey("RegionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Difficulty");

                    b.Navigation("Region");
                });
#pragma warning restore 612, 618
        }
    }
}
